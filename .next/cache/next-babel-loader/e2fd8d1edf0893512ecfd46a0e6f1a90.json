{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/usv-dashboard/components/Companies.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Companies =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Companies, _React$Component);\n\n  function Companies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Companies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Companies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeCompanyIndex: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"incrementActiveCompany\", function () {\n      var _this$props = _this.props,\n          companies = _this$props.companies,\n          setActiveCompany = _this$props.setActiveCompany;\n      var activeCompanyIndex = _this.state.activeCompanyIndex;\n\n      if (activeCompanyIndex <= companies.length - 1) {\n        _this.setState({\n          activeCompanyIndex: activeCompanyIndex + 1\n        });\n\n        setActiveCompany(companies[activeCompanyIndex].fields);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decrementActiveCompany\", function () {\n      var _this$props2 = _this.props,\n          companies = _this$props2.companies,\n          setActiveCompany = _this$props2.setActiveCompany;\n      var activeCompanyIndex = _this.state.activeCompanyIndex;\n\n      if (activeCompanyIndex > 0) {\n        _this.setState({\n          activeCompanyIndex: activeCompanyIndex - 1\n        });\n\n        setActiveCompany(companies[activeCompanyIndex].fields);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Companies, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          companies = _this$props3.companies,\n          activeCompany = _this$props3.activeCompany,\n          setActiveCompany = _this$props3.setActiveCompany;\n      var activeCompanyIndex = this.state.activeCompanyIndex;\n\n      if (!companies) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } else return __jsx(\"div\", {\n        className: \"companies-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        onClick: this.decrementActiveCompany,\n        className: \"nav-arrow clickable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        \"class\": \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"navigate_before_rounded\")), __jsx(\"div\", {\n        onClick: this.incrementActiveCompany,\n        className: \"nav-arrow clickable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        \"class\": \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"navigate_next_rounded\")), companies.map(function (company, index) {\n        return __jsx(\"div\", {\n          className: \"company\",\n          key: company.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          className: activeCompany.name == company.fields.name || activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\",\n          onClick: function onClick() {\n            setActiveCompany(company.fields);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, company.fields.name));\n      }));\n    }\n  }]);\n\n  return Companies;\n}(React.Component);\n\nexport default Companies; // /*\n// *\n// *  This component displays the list of companies per partner\n// *  And manages toggling between them with the arrows\n// *  In the constructor, it initiates an activeCompanyIndex which says which item in the array of that partner's companies is currently active\n// *  Then when the component mounts, it sets the active company in global state to the one at the 0th index of the array of that partner's companies\n// *  The activeCompanyIndex field in state is currently just used locally in this component to know which UI element should be displayed as active\n// *\n// */\n//\n// import React from 'react'\n//\n// class Companies extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { activeCompanyIndex: 0 }\n//   }\n//   componentDidMount() {\n//     this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//   }\n//   incrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex <= this.props.activePartnerCompanies.length - 1) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex + 1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   decrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex > 0) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex -1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"companies-wrapper\">\n//         <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n//         <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n//         <div>\n//         {\n//           this.props.activePartnerCompanies.map((company, index) => {\n//             return (\n//               <div>\n//                 <p className={this.props.activeCompany.name == company.fields.name || this.props.activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\"} onClick={() => {this.props.changeActiveCompany(company.fields)}}>{company.fields.name}</p>\n//               </div>\n//             )\n//           })\n//         }\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n//\n// export default Companies","map":{"version":3,"sources":["/Users/danigrant/Projects/usv-dashboard/components/Companies.js"],"names":["Companies","activeCompanyIndex","props","companies","setActiveCompany","state","length","setState","fields","activeCompany","decrementActiveCompany","incrementActiveCompany","map","company","index","id","name","React","Component"],"mappings":"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","sourcesContent":["class Companies extends React.Component {\n  state = { activeCompanyIndex: 0 }\n\n  incrementActiveCompany = () => {\n    const { companies, setActiveCompany } = this.props\n    const { activeCompanyIndex } = this.state\n\n    if (activeCompanyIndex <= companies.length - 1) {\n      this.setState({ activeCompanyIndex: activeCompanyIndex + 1 })\n      setActiveCompany(companies[activeCompanyIndex].fields)\n    }\n  }\n\n  decrementActiveCompany = () => {\n    const { companies, setActiveCompany } = this.props\n    const { activeCompanyIndex } = this.state\n\n    if (activeCompanyIndex > 0) {\n      this.setState({ activeCompanyIndex: activeCompanyIndex - 1 })\n      setActiveCompany(companies[activeCompanyIndex].fields)\n    }\n  }\n\n  render() {\n    const { companies, activeCompany, setActiveCompany } = this.props\n    const { activeCompanyIndex } = this.state\n\n    if (!companies) {\n      return (\n        <div>\n        {/* not a partner */}\n        </div>\n      )\n    } else return (\n      <div className=\"companies-wrapper\">\n        <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n        <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n        {companies.map((company, index) => (\n          <div className=\"company\" key={company.id}>\n            <p className={activeCompany.name == company.fields.name || activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\"} onClick={() => {setActiveCompany(company.fields)}}>{company.fields.name}</p>\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Companies\n\n// /*\n// *\n// *  This component displays the list of companies per partner\n// *  And manages toggling between them with the arrows\n// *  In the constructor, it initiates an activeCompanyIndex which says which item in the array of that partner's companies is currently active\n// *  Then when the component mounts, it sets the active company in global state to the one at the 0th index of the array of that partner's companies\n// *  The activeCompanyIndex field in state is currently just used locally in this component to know which UI element should be displayed as active\n// *\n// */\n//\n// import React from 'react'\n//\n// class Companies extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { activeCompanyIndex: 0 }\n//   }\n//   componentDidMount() {\n//     this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//   }\n//   incrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex <= this.props.activePartnerCompanies.length - 1) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex + 1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   decrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex > 0) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex -1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"companies-wrapper\">\n//         <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n//         <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n//         <div>\n//         {\n//           this.props.activePartnerCompanies.map((company, index) => {\n//             return (\n//               <div>\n//                 <p className={this.props.activeCompany.name == company.fields.name || this.props.activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\"} onClick={() => {this.props.changeActiveCompany(company.fields)}}>{company.fields.name}</p>\n//               </div>\n//             )\n//           })\n//         }\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n//\n// export default Companies\n"]},"metadata":{},"sourceType":"module"}