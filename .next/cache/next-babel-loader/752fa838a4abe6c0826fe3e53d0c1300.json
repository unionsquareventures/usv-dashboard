{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danigrant/Projects/usv-dashboard/components/Companies.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nclass Companies extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      activeCompanyIndex: 0\n    });\n  }\n\n  render() {\n    const {\n      companies\n    } = this.props;\n\n    if (!companies) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      });\n    } else return __jsx(\"div\", {\n      className: \"companies-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onClick: this.decrementActiveCompany,\n      className: \"nav-arrow clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      class: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"navigate_before_rounded\")), __jsx(\"div\", {\n      onClick: this.incrementActiveCompany,\n      className: \"nav-arrow clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      class: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"navigate_next_rounded\")), companies.map((company, index) => __jsx(\"div\", {\n      className: \"company\",\n      key: company.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, company.fields.name))));\n  }\n\n}\n\nexport default Companies; // /*\n// *\n// *  This component displays the list of companies per partner\n// *  And manages toggling between them with the arrows\n// *  In the constructor, it initiates an activeCompanyIndex which says which item in the array of that partner's companies is currently active\n// *  Then when the component mounts, it sets the active company in global state to the one at the 0th index of the array of that partner's companies\n// *  The activeCompanyIndex field in state is currently just used locally in this component to know which UI element should be displayed as active\n// *\n// */\n//\n// import React from 'react'\n//\n// class Companies extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { activeCompanyIndex: 0 }\n//   }\n//   componentDidMount() {\n//     this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//   }\n//   incrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex <= this.props.activePartnerCompanies.length - 1) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex + 1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   decrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex > 0) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex -1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"companies-wrapper\">\n//         <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n//         <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n//         <div>\n//         {\n//           this.props.activePartnerCompanies.map((company, index) => {\n//             return (\n//               <div>\n//                 <p className={this.props.activeCompany.name == company.fields.name || this.props.activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\"} onClick={() => {this.props.changeActiveCompany(company.fields)}}>{company.fields.name}</p>\n//               </div>\n//             )\n//           })\n//         }\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n//\n// export default Companies","map":{"version":3,"sources":["/Users/danigrant/Projects/usv-dashboard/components/Companies.js"],"names":["Companies","React","Component","activeCompanyIndex","render","companies","props","decrementActiveCompany","incrementActiveCompany","map","company","index","id","fields","name"],"mappings":";;;;;AAAA,MAAMA,SAAN,SAAwBC,KAAK,CAACC,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAC9B;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAD8B;AAAA;;AAGtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;;AAEA,QAAI,CAACD,SAAL,EAAgB;AACd,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KAND,MAMO,OACL;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,OAAO,EAAE,KAAKE,sBAAnB;AAA0C,MAAA,SAAS,EAAC,qBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E;AAAG,MAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA1E,CADF,EAEE;AAAK,MAAA,OAAO,EAAE,KAAKC,sBAAnB;AAA0C,MAAA,SAAS,EAAC,qBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0E;AAAG,MAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA1E,CAFF,EAGGH,SAAS,CAACI,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KACb;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAED,OAAO,CAACE,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,OAAO,CAACG,MAAR,CAAeC,IAAnB,CADF,CADD,CAHH,CADK;AAWR;;AAvBqC;;AA0BxC,eAAed,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["class Companies extends React.Component {\n  state = { activeCompanyIndex: 0 }\n\n  render() {\n    const { companies } = this.props\n\n    if (!companies) {\n      return (\n        <div>\n        {/* not a partner */}\n        </div>\n      )\n    } else return (\n      <div className=\"companies-wrapper\">\n        <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n        <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n        {companies.map((company, index) => (\n          <div className=\"company\" key={company.id}>\n            <p>{company.fields.name}</p>\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Companies\n\n// /*\n// *\n// *  This component displays the list of companies per partner\n// *  And manages toggling between them with the arrows\n// *  In the constructor, it initiates an activeCompanyIndex which says which item in the array of that partner's companies is currently active\n// *  Then when the component mounts, it sets the active company in global state to the one at the 0th index of the array of that partner's companies\n// *  The activeCompanyIndex field in state is currently just used locally in this component to know which UI element should be displayed as active\n// *\n// */\n//\n// import React from 'react'\n//\n// class Companies extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { activeCompanyIndex: 0 }\n//   }\n//   componentDidMount() {\n//     this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//   }\n//   incrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex <= this.props.activePartnerCompanies.length - 1) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex + 1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   decrementActiveCompany = () => {\n//     if (this.state.activeCompanyIndex > 0) {\n//       this.setState({ activeCompanyIndex: this.state.activeCompanyIndex -1 })\n//       this.props.changeActiveCompany(this.props.activePartnerCompanies[this.state.activeCompanyIndex].fields)\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"companies-wrapper\">\n//         <div onClick={this.decrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_before_rounded</i></div>\n//         <div onClick={this.incrementActiveCompany}className=\"nav-arrow clickable\"><i class=\"material-icons\">navigate_next_rounded</i></div>\n//         <div>\n//         {\n//           this.props.activePartnerCompanies.map((company, index) => {\n//             return (\n//               <div>\n//                 <p className={this.props.activeCompany.name == company.fields.name || this.props.activeCompanyIndex == index ? \"clickable companies-wrapper-item companies-wrapper-item--active\" : \"clickable companies-wrapper-item\"} onClick={() => {this.props.changeActiveCompany(company.fields)}}>{company.fields.name}</p>\n//               </div>\n//             )\n//           })\n//         }\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n//\n// export default Companies\n"]},"metadata":{},"sourceType":"module"}